#!/bin/bash

function parslib {
        ls $PATH_PROG_LIB > {{ path_home }}do.txt
	      for i in ${ls[@]}; do
		        rm -f ${PATH_PROG_LIB}${i*}

	      done

	      rsync -avzh $PATH_UPDATE $PATH_PROG
	      ls $PATH_PROG_LIB  > {{ path_home }}posle.txt
	      comm {{ path_home }}do.txt  {{ path_home }}posle.txt >  ${PATH_PROG_LIB}result-$date.log
	      rm -f  {{ path_home }}do.txt  {{ path_home }}posle.txt
}

function javadd {
        if [[ $1 == "y" ]]; then
            if [[ $2 == "32" ]]; then
                cp -r "{{ path_home }}"/$2bit/java1.8.$3 "{{ path_java }}"
            elif [[ $2 == "64" ]]; then
                cp -r "{{ path_home }}"/$2bit/java1.8.$3 "{{ path_java }}"
            fi
        fi
        return
}

DATE=`date '+%Y%m%d%H%M%S'`
PATH_UPDATE_LIB={{ path_update_lib }}
PATH_PROG_LIB= {{ path_prog_lib }}
PATH_UPDATE= {{ path_update_linux }}
PATH_PROG={{ path_prog }}
ls=($(ls $PATH_UPDATE_LIB | cut -d '.' -f1 | sed 's/\-[0-9]*$//'))
parslib
javaadd $1 $2 $3